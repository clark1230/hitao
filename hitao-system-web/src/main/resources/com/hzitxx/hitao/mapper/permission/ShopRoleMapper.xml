<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hzitxx.hitao.mapper.permission.ShopRoleMapper">
    <!--shop_role表中的列-->
    <sql id="shopRoleBaseColumn">
         role_id,
         role_name,
         role_description,
         created_time,
         created_by,
         updated_time,
         updated_by
    </sql>


    <!--添加-->
    <insert id="addShopRole" parameterType="com.hzitxx.hitao.entity.ShopRole">
        INSERT INTO shop_role(
            <include refid="shopRoleBaseColumn"/>
        ) VALUES(
                #{roleId},
                #{roleName},
                #{roleDescription},
                #{createdTime},
                #{createdBy},
                #{updatedTime},
                #{updatedBy}
        )
    </insert>
    <insert id="addShopRoleSelective" parameterType="com.hzitxx.hitao.entity.ShopRole">
        insert into shop_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDescription != null">
                role_description,
            </if>
            <if test="createdTime != null">
                created_time,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="updatedTime != null">
                updated_time,
            </if>
            <if test="updatedBy != null">
                updated_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId},
            </if>
            <if test="roleName != null">
                #{roleName},
            </if>
            <if test="roleDescription != null">
                #{roleDescription},
            </if>
            <if test="createdTime != null">
                #{createdTime},
            </if>
            <if test="createdBy != null">
                #{createdBy},
            </if>
            <if test="updatedTime != null">
                #{updatedTime},
            </if>
            <if test="updatedBy != null">
                #{updatedBy},
            </if>
        </trim>
    </insert>
    <!--根据id删除数据-->
    <delete id="deleteById" parameterType="integer">
        DELETE FROM  shop_role WHERE
        role_id = #{roleId}
    </delete>

    <!--根据id批量删除数据-->
    <delete id="deleteByIds" parameterType="java.lang.String">
          delete FROM  shop_role WHERE role_id in
          <foreach item="idItem" collection="array" open="(" separator="," close=")">
            #{idItem}
          </foreach>
    </delete>
    <!--根据id修改数据-->
    <update id="updateById" parameterType="com.hzitxx.hitao.entity.ShopRole">
        UPDATE shop_role
        <set>
          role_id=#{roleId},
          role_name=#{roleName},
          role_description=#{roleDescription},
          created_time=#{createdTime},
          created_by=#{createdBy},
          updated_time=#{updatedTime},
          updated_by=#{updatedBy}
        </set>
        WHERE
           role_id = #{roleId}
    </update>

    <update id="updateSelectiveById" parameterType="com.hzitxx.hitao.entity.ShopRole">
        UPDATE shop_role
        <set>
    <if test="roleId != null">
          role_id = #{roleId},
    </if>
    <if test="roleName != null">
          role_name = #{roleName},
    </if>
    <if test="roleDescription != null">
          role_description = #{roleDescription},
    </if>
    <if test="createdTime != null">
          created_time = #{createdTime},
    </if>
    <if test="createdBy != null">
          created_by = #{createdBy},
    </if>
    <if test="updatedTime != null">
          updated_time = #{updatedTime},
    </if>
    <if test="updatedBy != null">
          updated_by = #{updatedBy},
    </if>
    </set>
        WHERE
      role_id = #{roleId}
    </update>
    <!--根据id查询一条数据-->
    <select id="findOne" resultMap="shopRoleMap" parameterType="integer">
        select
        <include refid="shopRoleBaseColumn"/>
        from
            shop_role
        WHERE
          role_id = #{roleId}
    </select>
    <!--查询数据-->
    <select id="searchShopRole" parameterType="map" resultMap="shopRoleMap">
        SELECT
        <include refid="shopRoleBaseColumn"/>
        FROM shop_role
        <include refid="shopRoleBaseWhereSql"/>
    </select>

    <!--基础查询条件-->
    <sql id="shopRoleBaseWhereSql">
        <if test="map!=null">
            <where>
                <if test="map.roleId !=null">
                    AND role_id = #{map.roleId}
                </if>
                <if test="map.roleName !=null">
                    AND role_name = #{map.roleName}
                </if>
                <if test="map.roleDescription !=null">
                    AND role_description = #{map.roleDescription}
                </if>
                <if test="map.createdTime !=null">
                    AND created_time = #{map.createdTime}
                </if>
                <if test="map.createdBy !=null">
                    AND created_by = #{map.createdBy}
                </if>
                <if test="map.updatedTime !=null">
                    AND updated_time = #{map.updatedTime}
                </if>
                <if test="map.updatedBy !=null">
                    AND updated_by = #{map.updatedBy}
                </if>
            </where>
        </if>
    </sql>

         <!-- 通用查询映射结果 -->
    <resultMap id="shopRoleMap" type="com.hzitxx.hitao.entity.ShopRole">
            <id column="role_id" property="roleId"/>
            <result column="role_name" property="roleName"/>
            <result column="role_description" property="roleDescription"/>
            <result column="created_time" property="createdTime"/>
            <result column="created_by" property="createdBy"/>
            <result column="updated_time" property="updatedTime"/>
            <result column="updated_by" property="updatedBy"/>
     </resultMap>
</mapper>
